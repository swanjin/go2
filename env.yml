### Connection
connect_ai: true
ai: openai
ai_model: gpt-4o # gpt-4o, gpt-4o-mini, o1-preview, o1-mini
temperature: 0.0
connect_robot: false
tts: false
tts_speed: 1.3
langsam: false

### Agent modes
woz: false
vn: false
interactive: true

### Prompt
target_in_test_dataset: apple. # apple, banana, refrigerator, bottle, sofa
target: apple
object1: banana
object2: refrigerator
object3: bottle
object4: sofa
curr_state: (-2, -2, 90) # (-2, -2, 90)
left_frame: 0.33
right_frame: 0.66
stop_target: 1.0
stop_landmark: 1.5
threshold_range: 1
captured_width: 1280 # OpenAI: 512~2000
captured_height: 720 #  OpenAI: 512~768

### Vision model
detection_model: langsam # langsam, owlv2
depth_threshold: 3
depth_scale_for_under: 1/2
depth_scale_for_over: 3/4
box_threshold: 0.3
text_threshold: 0.3

### Configuration
opencv_path: /usr/lib/python3/dist-packages/cv2/python-3.10 # Gstreamer supported version; python3 -> import cv2 -> print(cv2.getBuildInformation()) -> Python 3: -> install path:
robot_gstreamer: udpsrc multicast-group=230.1.1.1 port=1720 multicast-iface=enp58s0 ! application/x-rtp, media=video, encoding-name=H264 ! rtph264depay ! h264parse ! avdec_h264 ! videoconvert ! video/x-raw,width=1280,height=720,format=BGR ! appsink drop=1 # check network interface 
test_gstreamer: udpsrc address=230.1.1.1 port=1720 ! application/x-rtp, media=video, encoding-name=H264 ! rtph264depay ! h264parse ! avdec_h264 ! videoconvert ! video/x-raw,width=1280,height=720,format=BGR ! appsink drop=1
network_interface: enp58s0 # check network interface 

### Test
use_test_dataset: false
max_round: 50

### Legacy
# #### owlv2
# iou_threshold: 0.1 # controls aggressiveness of NMS in suppressing overlapping boxes. Low IoU threshold results in more aggressive filtering.
# detect_confidence: 0.0

# #### Util
# speechable: false